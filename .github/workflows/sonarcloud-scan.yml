name: SonarCloud scan

on:
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/sonarcloud-scan.yml
      - "src/**"
      - "test/**"
      - Aktabook.sln
  push:
    branches:
      - main
    paths:
      - .github/workflows/sonarcloud-scan.yml
      - "src/**"
      - "test/**"
      - Aktabook.sln
  schedule:
    - cron: 17 21 * * 5
  workflow_dispatch:

jobs:
  build:
    name: Scan solution on Windows
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    runs-on: windows-latest

    steps:
      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: "%userprofile%/.nuget/packages"
          key: ${{ runner.os }}-nuget-sonarscanner-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: Install tools
        run: |-
          dotnet tool install --global dotnet-coverage
          dotnet tool install --global dotnet-sonarscanner

      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Restores dependencies
        run: dotnet restore --locked-mode

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          DOTNET_CLI_TELEMETRY_OPTOUT: true
        shell: powershell
        run: |-
          $env:JAVA_HOME = $env:JAVA_HOME_17_X64
          dotnet sonarscanner begin `
          /k:"oboukli_aktabook" `
          /o:"oboukli" `
          /d:sonar.host.url="https://sonarcloud.io" `
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          dotnet build ./Aktabook.sln `
          `--no-incremental `
          `--no-restore
          dotnet test `--collect "Code Coverage"
          dotnet sonarscanner end `
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: DEBUG Upload test coverage file
        uses: actions/upload-artifact@v3
        with:
          name: coverage.xml
          path: ./coverage.xml
