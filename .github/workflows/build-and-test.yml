name: Build and run unit and integration tests

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Solution build
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    outputs:
      short-commit-sha: ${{ steps.get-short-commit-sha.outputs.short-commit-sha }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Build release
        uses: ./.github/workflows/composite/dotnet-build
        with:
          configuration: Release

      - name: Create build artifacts archive
        run: 7z a -bb0 -bd -m0=lzma2 -mx=3 -x!.git -x!.github -xr!obj -xr!*.cs aktabook-build.7z .

      - name: Get short commit SHA
        id: get-short-commit-sha
        run: echo "::set-output name=short-commit-sha::$(git rev-parse --short "$GITHUB_SHA")"

      - name: Upload build artifacts archive
        uses: actions/upload-artifact@v3
        with:
          name: aktabook-build-${{ steps.get-short-commit-sha.outputs.short-commit-sha }}
          path: aktabook-build.7z

  integration-test:
    name: Integration test
    runs-on: ubuntu-latest
    needs: build
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: true
      RequesterServiceBus__RabbitMQConnectionOptions__HostName: localhost
      RequesterServiceBus__RabbitMQConnectionOptions__PortNumber: 5672
      RequesterServiceBus__RabbitMQConnectionOptions__VirtualHost: aktabook_vhost
      RequesterServiceBus__RabbitMQConnectionOptions__UserName: ${{ secrets.RABBITMQ_INTEGRATION_TEST_USERNAME }}
      RequesterServiceBus__RabbitMQConnectionOptions__Password: ${{ secrets.RABBITMQ_INTEGRATION_TEST_PASSWORD }}

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: ${{ secrets.SQLSERVER_INTEGRATION_TEST_SA_PASSWORD }}
        ports:
          - 1433:1433
        options: >-
          --health-cmd "
          /opt/mssql-tools/bin/sqlcmd
          -h -1
          -P $SA_PASSWORD
          -Q 'SET NOCOUNT ON; SELECT 1'
          -S 127.0.0.1
          -U sa
          -W
          > /dev/null
          "
          --health-interval 7s
          --health-retries 5
          --health-timeout 3s

      rabbitmq:
        image: rabbitmq:management
        env:
          RABBITMQ_DEFAULT_VHOST: aktabook_vhost
          RABBITMQ_DEFAULT_USER: ${{ secrets.RABBITMQ_INTEGRATION_TEST_USERNAME }}
          RABBITMQ_DEFAULT_PASS: ${{ secrets.RABBITMQ_INTEGRATION_TEST_PASSWORD }}
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd "rabbitmq-diagnostics ping"
          --health-interval 7s
          --health-retries 5
          --health-timeout 3s
          --hostname aktabook-queue

    steps:
      - name: Download build artifacts archive
        uses: actions/download-artifact@v3
        with:
          name: aktabook-build-${{ needs.build.outputs.short-commit-sha }}

      - name: Extract build artifacts archive
        run: 7z x aktabook-build.7z

      - name: Restore .NET tools
        run: dotnet tool restore

      - name: Create RabbitMQ virtual host
        env:
          BUS_USERNAME: ${{ secrets.RABBITMQ_INTEGRATION_TEST_USERNAME }}
          BUS_PASSWORD: ${{ secrets.RABBITMQ_INTEGRATION_TEST_PASSWORD }}
        run: >-
          curl
          --data-urlencode
          --request PUT
          --silent
          --netrc-file <(cat <<< "login $BUS_USERNAME password $BUS_PASSWORD")
          http://localhost:15672/api/vhosts/aktabook_vhost

      - name: Create AMQP connection URL
        run: >-
          echo "RABBITMQ_CONNECTION_STRING=$(
          cat <<<
          'Console.WriteLine((new UriBuilder("amqp",
          Args[0],
          int.Parse(Args[1]),
          Uri.EscapeDataString(Args[2]))
          { UserName = Uri.EscapeDataString(Args[3]),
          Password = Uri.EscapeDataString(Args[4])
          }).Uri.ToString());'
          | dotnet script eval --
          $RequesterServiceBus__RabbitMQConnectionOptions__HostName
          $RequesterServiceBus__RabbitMQConnectionOptions__PortNumber
          $RequesterServiceBus__RabbitMQConnectionOptions__VirtualHost
          $RequesterServiceBus__RabbitMQConnectionOptions__UserName
          $RequesterServiceBus__RabbitMQConnectionOptions__Password
          )" >> $GITHUB_ENV

      - name: Create NServiceBus delays
        run: >-
          dotnet rabbitmq-transport
          delays create
          --connectionStringEnv RABBITMQ_CONNECTION_STRING

      - name: Create NServiceBus BookInfoRequestEndpoint
        run: >-
          dotnet rabbitmq-transport
          endpoint create BookInfoRequestEndpoint
          --auditQueueName aktabook_audit
          --connectionStringEnv RABBITMQ_CONNECTION_STRING
          --errorQueueName aktabook_error
          --queueType Quorum
          --routingTopology Conventional
          --useDurableEntities

      - name: Run bus endpoint host
        run: |-
          dotnet Aktabook.Bus.dll &
          echo "BUS_ENDPOINT_HOST_PID=$!" >> $GITHUB_ENV
        working-directory: src/Aktabook.Bus/bin/Release/net6.0/

      - name: Run integration tests
        env:
          AKTABOOK_ENVIRONMENT: Test
          AKTABOOK_INTEGRATION_TEST_ENVIRONMENT: Test
          RequesterServiceDbContext__SqlServerConfig__DataSource: 127.0.0.1
          RequesterServiceDbContext__SqlServerConfig__Encrypt: false
          RequesterServiceDbContext__SqlServerConfig__UserID: sa
          RequesterServiceDbContext__SqlServerConfig__Password: ${{ secrets.SQLSERVER_INTEGRATION_TEST_SA_PASSWORD }}
        run: >-
          dotnet test
          --configuration Release
          --filter FullyQualifiedName\~IntegrationTest
          --no-build
          --no-restore

      - name: Stop bus endpoint host
        run: kill -s SIGINT $BUS_ENDPOINT_HOST_PID

  unit-test:
    name: Unit test
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build artifacts archive
        uses: actions/download-artifact@v3
        with:
          name: aktabook-build-${{ needs.build.outputs.short-commit-sha }}

      - name: Extract build artifacts archive
        run: 7z x aktabook-build.7z

      - name: Run unit tests
        run: >-
          dotnet test
          --configuration Release
          --filter FullyQualifiedName\~UnitTest
          --no-build
